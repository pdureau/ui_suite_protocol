<?php

/**
 * @file
 * Functions to support theming in the ui_suite_bootstrap theme.
 */

declare(strict_types = 1);

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Template\Attribute;

/**
 * Add a value into the class attributes of a given element.
 *
 * Assumes element is an array.
 * Inspired by: https://www.drupal.org/node/3334294
 *
 * @param array $element
 *   An array.
 * @param string[]|string ...$classes
 *   The classes to add on element. Arguments can include string keys directly,
 *   or arrays of string keys.
 *
 * @return array
 *   The element with the given class(es) in attributes.
 */
function _ui_suite_material_add_class(array $element, ...$classes): array {
  if (\array_is_list($element)) {
    foreach ($element as $index => $item) {
      if (!\is_array($item)) {
        continue;
      }
      $element[$index] = _ui_suite_material_add_class($item, ...$classes);
    }
    return $element;
  }
  $attributes = new Attribute($element['#attributes'] ?? []);
  $attributes->addClass(...$classes);
  $element['#attributes'] = $attributes->toArray();
  return $element;
}

/**
 * Implements hook_preprocess_HOOK() for 'pattern_card'.
 */
function ui_suite_protocol_preprocess_pattern_card(array &$variables): void {
  if (array_key_exists('image', $variables) && is_array($variables['image'])) {
    $variables['image'] = _ui_suite_material_add_class($variables['image'], 'mzp-c-card-image');
  }
  // Disable link wrapping in layout builder.
  if (array_key_exists('link', $variables) && is_array($variables['link'])) {
    if (array_key_exists('layout_builder_add_block', $variables['link'])) {
      unset($variables['link']);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for 'pattern_billboard'.
 */
function ui_suite_protocol_preprocess_pattern_billboard(array &$variables): void {
  if (array_key_exists('image', $variables) && is_array($variables['image'])) {
    $variables['image'] = _ui_suite_material_add_class($variables['image'], 'mzp-c-billboard-image');
  }
  if (array_key_exists('cta_link', $variables) && is_array($variables['cta_link'])) {
    $variables['cta_link'] = _ui_suite_material_add_class($variables['cta_link'], 'mzp-c-cta-link');
  }
}

/**
 * Implements hook_preprocess_HOOK() for 'pattern_split'.
 */
function ui_suite_protocol_preprocess_pattern_split(array &$variables): void {
  if (array_key_exists('media', $variables) && is_array($variables['media'])) {
    $variables['media'] = _ui_suite_material_add_class($variables['media'], 'mzp-c-split-media-asset');

  }
}

/**
 * Implements hook_form_alter().
 */
function ui_suite_protocol_form_alter(array &$form, FormStateInterface $form_state, string $form_id): void {
  $form['#attributes']['class'][] = 'mzp-c-form';
  // Style form buttons like button patterns.
  if (isset($form['actions'])) {
    $actions = Element::children($form['actions']);
    foreach ($actions as $action) {
      $form['actions'][$action]['#attributes']['class'][] = 'mzp-c-button';
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for 'table'.
 */
function ui_suite_protocol_preprocess_table(array &$variables): void {
  $variables['attributes']['class'][] = 'mzp-u-data-table';
}

/**
 * Implements hook_preprocess_HOOK() for 'item_list'.
 */
function ui_suite_protocol_preprocess_item_list(array &$variables): void {
  $variables['attributes']['class'][] = 'mzp-u-list-styled';
}

/**
 * Implements hook_preprocess_HOOK() for 'image'.
 *
 * Convert relative path to full path.
 */
function ui_suite_protocol_preprocess_image(array &$variables): void {
  $uri = $variables["uri"];
  $is_absolute = isset(parse_url($uri)['host']) || \str_starts_with($uri, "/") || \str_starts_with($uri, "data:");
  if (!$is_absolute) {
    $variables["attributes"]["src"] = base_path() . $variables["directory"] . "/" . $uri;
  }
}
